version: 2.1

defaults: &defaults
    working_directory: ~/pbourdet
    docker:
        - image: circleci/php:8.0-node
        - image: mysql:5.7
          environment:
              - MYSQL_ALLOW_EMPTY_PASSWORD=yes
              - MYSQL_USER=homestead
              - MYSQL_PASSWORD=secret
              - MYSQL_ROOT_PASSWORD=secret
              - MYSQL_DATABASE=homestead

filter_merge: &filter_merge
    filters:
        branches:
            ignore:
                - master

only_master: &only_master
    filters:
        branches:
            only:
                - master

commands:
    install:
        steps:
            - restore_cache:
                  key: dependencies-{{ checksum "symfony/composer.lock" }}-{{ checksum "symfony/symfony.lock" }}-{{ checksum "frontend-react/yarn.lock" }}
            - run:
                  name: Install node packages
                  command: |
                    cd frontend-react/
                    yarn --frozen-lockfile
                    cd ..
            - run:
                  name: Install composer packages
                  command: |
                    cd symfony/
                    composer install
                    cd ..
            - save_cache:
                  key: dependencies-{{ checksum "symfony/composer.lock" }}-{{ checksum "symfony/symfony.lock" }}-{{ checksum "frontend-react/yarn.lock" }}
                  paths:
                    - symfony/vendor
                    - frontend-react/node_modules

    database:
        steps:
            - run:
                name: Setup database
                command: |
                    cd symfony/
                    sudo docker-php-ext-install pdo_mysql
                    php bin/console doctrine:migration:migrate --no-interaction
                    php bin/console doctrine:fixtures:load --no-interaction
                    cd ..

    phpunit:
        steps:
            - run:
                  name: Run PHPUnit tests
                  command: |
                    cd symfony/
                    ./vendor/bin/simple-phpunit
                    cd ..

    jest:
        steps:
            - run:
                name: Run Jest tests
                command: |
                    cd frontend-react/
                    yarn test src/
                    cd ..

    lint:
        steps:
            - run:
                  name: PHP CS Fixer
                  command: |
                      cd symfony/
                      ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php -v --dry-run --stop-on-violation --using-cache=no
                      cd ..
            - run:
                  name: Yaml lint
                  command: |
                      cd symfony/
                       ./vendor/bin/yaml-lint ./config
                      cd ..
            - run:
                  name: JS lint
                  command: |
                      cd frontend-react/
                      yarn eslint src/
                      cd ..

    phpstan:
        steps:
            - run:
                  name: Run PHPStan
                  command: |
                      cd symfony/
                      vendor/bin/phpstan analyse -l 8 src --memory-limit=-1
                      cd ..

    deploy:
        steps:
            - run:
                  name: Production deploy
                  command: |
                      chmod 755 .circleci/deploy.sh
                      ./.circleci/deploy.sh

jobs:
    check_pr:
        <<: *defaults
        steps:
            - checkout
            - install
            - database
            - lint
            - phpstan
            - phpunit
            - jest

    deploy_prod:
        <<: *defaults
        steps:
            - add_ssh_keys:
                fingerprint:
                    - "4c:67:6d:e8:f3:63:47:d5:cb:91:c4:f4:e3:90:ed:d4"
            - checkout
            - deploy

workflows:
    version: 2
    check:
        jobs:
            - check_pr:
                  <<: *filter_merge

    deploy:
        jobs:
            - deploy_prod:
                  <<: *only_master
