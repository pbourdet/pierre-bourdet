version: "3.8"

services:
    symfony:
        container_name: symfony
        image: pbourdet/symfony-dev
        build:
            context: ./symfony/.
            target: symfony_php_dev
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
            - php_logs:/srv/app/var/log
            - ./symfony/:/srv/app:rw,cached
            - ./symfony/docker/php/conf.d/symfony.dev.ini:/usr/local/etc/php/conf.d/symfony.ini
        environment:
            APP_ENV: dev
            RUN_FIXTURES: 'true'
            #Xdebug config
            XDEBUG_CONFIG: >-
                client_host=host.docker.internal
                start_with_request=yes
            XDEBUG_MODE: debug
            PHP_IDE_CONFIG: serverName=symfony
        extra_hosts:
            # Ensure that host.docker.internal is correctly defined on Linux
            - host.docker.internal:host-gateway
    workers:
        container_name: workers
        image: pbourdet/workers-dev
        build:
            context: ./symfony/.
            target: symfony_php
        restart: unless-stopped
        command: ["bin/console", "messenger:consume", "async"]
        environment:
            APP_ENV: dev
    caddy:
        container_name: caddy
        image: pbourdet/caddy-dev
        build:
            context: ./symfony/.
            target: symfony_caddy
        depends_on:
             - symfony
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
            - caddy_data:/data
            - caddy_config:/config
            - ./symfony/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
            - ./symfony/public:/srv/app/public:ro
        ports:
            - "80:80/tcp"
            - "443:443/tcp"
            - "443:443/udp"
        environment:
            SERVER_NAME: localhost, caddy:80
            MERCURE_PUBLISHER_JWT_KEY: 1234
            MERCURE_SUBSCRIBER_JWT_KEY: 1234
            MERCURE_EXTRA_DIRECTIVES: |-
                cors_origins https://localhost:3000
    php-logs:
        container_name: php-logs
        image: busybox
        depends_on:
            - symfony
        volumes:
            - php_logs:/var/log
            - ./symfony/docker/php-logs/print-logs.sh:/var/print-logs.sh
        command: ["sh", "/var/print-logs.sh"]
        environment:
            APP_ENV: dev
    postgres:
        container_name: postgres
        image: postgres:13-alpine
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: pbourdet
            POSTGRES_PASSWORD: root
            POSTGRES_USER: root
    mailhog:
        container_name: mailhog
        image: mailhog/mailhog
        logging:
            driver: 'none'
        ports:
            - "1025:1025"
            - "8025:8025"
    react:
        container_name: react
        image: pbourdet/react-dev
        build:
            context: ./frontend-react/.
            target: react
            args:
                APP_ENV: dev
        volumes:
            - /app/node_modules
            - ./frontend-react/:/app
        ports:
            - 3000:3000
volumes:
    php_socket:
    caddy_data:
    caddy_config:
    php_logs:
