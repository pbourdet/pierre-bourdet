security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        refresh:
            pattern:  ^/security/refresh-token
            stateless: true
        login:
            pattern:  ^/security/login
            stateless: true
            json_login:
                check_path:               /security/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        users:
            pattern:   ^/users
            methods: [DELETE, GET]
            stateless: true
            jwt: ~
        todos:
            pattern:   ^/todos
            methods: [PUT, DELETE, GET, POST]
            stateless: true
            jwt: ~
        games:
            pattern: ^/games
            methods: [GET, POST]
            stateless: true
            jwt: ~
        account:
            pattern:   ^/account
            methods: [POST, GET]
            stateless: true
            jwt: ~
        conversations:
            pattern:   ^/conversations
            methods: [POST, GET]
            stateless: true
            jwt: ~
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/security, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/users, roles: IS_AUTHENTICATED_FULLY, methods: [DELETE, GET] }
        - { path: ^/todos, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST, PUT, DELETE] }
        - { path: ^/account, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST, PUT, DELETE] }
        - { path: ^/games/\w+/top, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET, POST] }
        - { path: ^/games, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST] }
        - { path: ^/conversations, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST] }
